# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.batch_running_resource_operation_operation import (
        BatchRunningResourceOperationOperation,
    )

    BatchRunningResourceOperationOperationAdapter = TypeAdapter(
        BatchRunningResourceOperationOperation
    )
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

batch_running_resource_operation_operation_model_schema = json.loads(
    r"""{
  "title" : "BatchRunningResourceOperation_operation",
  "required" : [ "action", "description", "entity" ],
  "type" : "object",
  "properties" : {
    "entity" : {
      "$ref" : "#/components/schemas/BatchRunningResourceOperation_operation_entity"
    },
    "action" : {
      "$ref" : "#/components/schemas/BatchResourceOperation_action"
    },
    "description" : {
      "title" : "description",
      "type" : "string",
      "example" : "deleting 2 resources"
    }
  },
  "description" : "Queued operation summary"
}
""",
    object_hook=with_example_provider,
)
batch_running_resource_operation_operation_model_schema.update({
    "definitions": MODEL_DEFINITIONS
})

batch_running_resource_operation_operation_faker = JSF(
    batch_running_resource_operation_operation_model_schema, allow_none_optionals=1
)


class BatchRunningResourceOperationOperationStub:
    """BatchRunningResourceOperationOperation unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return batch_running_resource_operation_operation_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "BatchRunningResourceOperationOperation":
        """Create BatchRunningResourceOperationOperation stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if not json:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                BatchRunningResourceOperationOperationAdapter.json_schema(),
                allow_none_optionals=1,
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return BatchRunningResourceOperationOperationAdapter.validate_python(
            json, context={"skip_validation": True}
        )
