# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.batch_running_resource_operation import (
        BatchRunningResourceOperation,
    )

    BatchRunningResourceOperationAdapter = TypeAdapter(BatchRunningResourceOperation)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

batch_running_resource_operation_model_schema = json.loads(
    r"""{
  "required" : [ "id", "operation", "queueTime", "user" ],
  "type" : "object",
  "properties" : {
    "id" : {
      "$ref" : "#/components/schemas/BatchId"
    },
    "user" : {
      "$ref" : "#/components/schemas/UserId"
    },
    "queueTime" : {
      "$ref" : "#/components/schemas/SO8601Timestamp"
    },
    "operation" : {
      "$ref" : "#/components/schemas/BatchRunningResourceOperation_operation"
    }
  }
}
""",
    object_hook=with_example_provider,
)
batch_running_resource_operation_model_schema.update({"definitions": MODEL_DEFINITIONS})

batch_running_resource_operation_faker = JSF(
    batch_running_resource_operation_model_schema, allow_none_optionals=1
)


class BatchRunningResourceOperationStub:
    """BatchRunningResourceOperation unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return batch_running_resource_operation_faker.generate()

    @classmethod
    def create_instance(cls) -> "BatchRunningResourceOperation":
        """Create BatchRunningResourceOperation stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return BatchRunningResourceOperationAdapter.validate_python(cls.create_json())
