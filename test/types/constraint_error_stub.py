# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.constraint_error import ConstraintError

    ConstraintErrorAdapter = TypeAdapter(ConstraintError)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

constraint_error_model_schema = json.loads(
    r"""{
  "title" : "ConstraintError",
  "required" : [ "error", "errorPath", "resources" ],
  "type" : "object",
  "properties" : {
    "error" : {
      "title" : "error",
      "type" : "string",
      "description" : "User error message",
      "example" : "Property address missing."
    },
    "errorPath" : {
      "title" : "errorPath",
      "type" : "string",
      "description" : "Attribute path",
      "example" : "/address"
    },
    "resources" : {
      "title" : "resources",
      "type" : "array",
      "description" : "Ids of the _Resources_ that fail the constraint",
      "example" : [ "d3d823f5-f214-4de8-7c0-f2c8c4db5ee1", "36bac1e0-841f-4085-804d-5ad304fef395" ],
      "items" : {
        "$ref" : "#/components/schemas/ResourceId"
      }
    }
  },
  "description" : "Validation Error report of a Resource Constraint"
}
""",
    object_hook=with_example_provider,
)
constraint_error_model_schema.update({"definitions": MODEL_DEFINITIONS})

constraint_error_faker = JSF(constraint_error_model_schema, allow_none_optionals=1)


class ConstraintErrorStub:
    """ConstraintError unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return constraint_error_faker.generate()

    @classmethod
    def create_instance(cls) -> "ConstraintError":
        """Create ConstraintError stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ConstraintErrorAdapter.validate_python(cls.create_json())
