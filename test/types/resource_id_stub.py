# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.resource_id import ResourceId

    ResourceIdAdapter = TypeAdapter(ResourceId)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

resource_id_model_schema = json.loads(
    r"""{
  "type" : "string",
  "description" : "Primary identifier of a _Resource_",
  "example" : "d3d823f5-f214-4de8-7c0-f2c8c4db5ee1",
  "anyOf" : [ {
    "title" : "System Generated Id",
    "pattern" : "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
    "type" : "string",
    "description" : "A _Resource_ id generated by the Waylay System"
  }, {
    "title" : "User Provided Id",
    "type" : "string",
    "description" : "A _Resource_ id assigned by the user upon creation"
  } ]
}
""",
    object_hook=with_example_provider,
)
resource_id_model_schema.update({"definitions": MODEL_DEFINITIONS})

resource_id_faker = JSF(resource_id_model_schema, allow_none_optionals=1)


class ResourceIdStub:
    """ResourceId unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return resource_id_faker.generate()

    @classmethod
    def create_instance(cls) -> "ResourceId":
        """Create ResourceId stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ResourceIdAdapter.validate_python(cls.create_json())
