# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.resource_metric_metric_type_one_of4 import (
        ResourceMetricMetricTypeOneOf4,
    )

    ResourceMetricMetricTypeOneOf4Adapter = TypeAdapter(ResourceMetricMetricTypeOneOf4)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

resource_metric_metric_type_one_of_4_model_schema = json.loads(
    r"""{
  "type" : "string",
  "description" : "Value represents a unix timestamp. so basically a gauge or counter but we know we can also render the “age” at each point.",
  "enum" : [ "timestamp" ]
}
""",
    object_hook=with_example_provider,
)
resource_metric_metric_type_one_of_4_model_schema.update({
    "definitions": MODEL_DEFINITIONS
})

resource_metric_metric_type_one_of_4_faker = JSF(
    resource_metric_metric_type_one_of_4_model_schema, allow_none_optionals=1
)


class ResourceMetricMetricTypeOneOf4Stub:
    """ResourceMetricMetricTypeOneOf4 unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return resource_metric_metric_type_one_of_4_faker.generate(
            use_defaults=True, use_examples=True
        )

    @classmethod
    def create_instance(cls) -> "ResourceMetricMetricTypeOneOf4":
        """Create ResourceMetricMetricTypeOneOf4 stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        json = cls.create_json()
        if json is None:
            # use backup example based on the pydantic model schema
            backup_faker = JSF(
                ResourceMetricMetricTypeOneOf4Adapter.json_schema(),
                allow_none_optionals=1,
            )
            json = backup_faker.generate(use_defaults=True, use_examples=True)
        return ResourceMetricMetricTypeOneOf4Adapter.validate_python(
            json, context={"skip_validation": True}
        )
