# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.resource_parent import ResourceParent

    ResourceParentAdapter = TypeAdapter(ResourceParent)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

resource_parent_model_schema = json.loads(
    r"""{
  "title" : "Resource Parent",
  "description" : "Id of the parent _Resource_",
  "example" : "658c4fb3-d25a-4bfa-aeca-3fb0009e9a8a",
  "allOf" : [ {
    "$ref" : "#/components/schemas/ResourceId"
  } ]
}
""",
    object_hook=with_example_provider,
)
resource_parent_model_schema.update({"definitions": MODEL_DEFINITIONS})

resource_parent_faker = JSF(resource_parent_model_schema, allow_none_optionals=1)


class ResourceParentStub:
    """ResourceParent unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return resource_parent_faker.generate()

    @classmethod
    def create_instance(cls) -> "ResourceParent":
        """Create ResourceParent stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ResourceParentAdapter.validate_python(cls.create_json())
