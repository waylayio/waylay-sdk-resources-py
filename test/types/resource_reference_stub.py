# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import datetime
import json
import warnings

from typing import (
    Union,
    List,
    Dict,
    Literal,  # >=3.8
)
from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.resource_reference import ResourceReference

    ResourceReferenceAdapter = TypeAdapter(ResourceReference)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

resource_reference_model_schema = json.loads(
    r"""{
  "required" : [ "$ref" ],
  "type" : "object",
  "properties" : {
    "$ref" : {
      "title" : "Resource URI",
      "pattern" : "^/resources/.*",
      "type" : "string",
      "description" : "A URI for the _Resource_, formatted as `/resources/{resourceId}`",
      "example" : "/resources/04592b9a-e0c2-4e64-8c9a-202e50cd9275"
    }
  },
  "additionalProperties" : {
    "title" : "Relation Attributes",
    "description" : "Additional attributes that describe the relation with the referenced _Resource_."
  },
  "description" : "Represents a reference to a _Resource_"
}
""",
    object_hook=with_example_provider,
)
resource_reference_model_schema.update({"definitions": MODEL_DEFINITIONS})

resource_reference_faker = JSF(resource_reference_model_schema, allow_none_optionals=1)


class ResourceReferenceStub:
    """ResourceReference unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return resource_reference_faker.generate()

    @classmethod
    def create_instance(cls) -> "ResourceReference":
        """Create ResourceReference stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ResourceReferenceAdapter.validate_python(cls.create_json())
