# coding: utf-8
"""Waylay Resources model tests.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import json

from jsf import JSF
from pydantic import TypeAdapter

from ..openapi import MODEL_DEFINITIONS, with_example_provider

try:
    from waylay.services.resources.models.resource_type_with_id_entity import (
        ResourceTypeWithIdEntity,
    )

    ResourceTypeWithIdEntityAdapter = TypeAdapter(ResourceTypeWithIdEntity)
    MODELS_AVAILABLE = True
except ImportError as exc:
    MODELS_AVAILABLE = False

resource_type_with_id_entity_model_schema = json.loads(
    r"""{
  "title" : "ResourceTypeWithIdEntity",
  "type" : "object",
  "allOf" : [ {
    "$ref" : "#/components/schemas/WithIdRequired"
  }, {
    "$ref" : "#/components/schemas/ResourceTypeEntity"
  }, {
    "properties" : {
      "$bulkOperation" : {
        "title" : "Running Operation",
        "type" : "string",
        "description" : "Indicates an asynchronous operation is busy for the _Resource Type_.",
        "example" : "d44b2ce9-fb7e-453e-a8bf-b7fefd933313"
      },
      "$constraints" : {
        "title" : "Applied Resource Type Constraints",
        "type" : "array",
        "description" : "Validation constraint as applied to each _Resource_ that has\nits `resourceTypeId` attribute set to the `id` of this _Resource Type_.",
        "items" : {
          "$ref" : "#/components/schemas/ConstraintStatus"
        }
      }
    }
  } ]
}
""",
    object_hook=with_example_provider,
)
resource_type_with_id_entity_model_schema.update({"definitions": MODEL_DEFINITIONS})

resource_type_with_id_entity_faker = JSF(
    resource_type_with_id_entity_model_schema, allow_none_optionals=1
)


class ResourceTypeWithIdEntityStub:
    """ResourceTypeWithIdEntity unit test stubs."""

    @classmethod
    def create_json(cls):
        """Create a dict stub instance."""
        return resource_type_with_id_entity_faker.generate()

    @classmethod
    def create_instance(cls) -> "ResourceTypeWithIdEntity":
        """Create ResourceTypeWithIdEntity stub instance."""
        if not MODELS_AVAILABLE:
            raise ImportError("Models must be installed to create class stubs")
        return ResourceTypeWithIdEntityAdapter.validate_python(cls.create_json())
