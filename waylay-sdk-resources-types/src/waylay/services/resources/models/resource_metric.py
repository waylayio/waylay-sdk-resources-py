# coding: utf-8
"""Waylay Resources models.

This code was generated from the OpenAPI documentation of 'Waylay Resources'

Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.

"""

from __future__ import annotations

from typing import List

from pydantic import (
    ConfigDict,
    Field,
    StrictFloat,
    StrictInt,
    StrictStr,
)
from waylay.sdk.api._models import BaseModel as WaylayBaseModel

from ..models.resource_metric_metric_type import ResourceMetricMetricType


class ResourceMetric(WaylayBaseModel):
    """Describes a value that is expected to be present in the events sent to Waylay on behalf of this _Resource (Type)_. By default, such values will end up in the time series database, where each time series is identified by the _resource id_ and the _metric name_.  > Note: The Waylay System does not enforce any of the statements made in a _Resource Metric_ when > processing or retrieving data. As long as a user does not explicitly use this metadata to configure > behaviour, a _Resource Metric_ is purely a documentation entity.."""

    name: StrictStr = Field(
        description="The key under which values of this metric are present in the root of a Waylay Event. Also the _metric_ identifier in the timeseries database for these values when stored."
    )
    value_type: StrictStr | None = Field(
        default=None, description="Type of the value", alias="valueType"
    )
    value_choices: List[StrictStr] | None = Field(
        default=None,
        description="Enumeration of the possible values for a metric",
        alias="valueChoices",
    )
    metric_type: ResourceMetricMetricType | None = Field(
        default=None, alias="metricType"
    )
    unit: StrictStr | None = Field(
        default=None,
        description="Physical measurement unit, preferentially SI unit, for the numerical values of this metric",
    )
    maximum: StrictFloat | StrictInt | None = Field(
        default=None, description="Expected maximum value for this metric."
    )
    minimum: StrictFloat | StrictInt | None = Field(
        default=None, description="Expected minimum value for this metric."
    )

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
        extra="ignore",
    )
